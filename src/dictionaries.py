from typing import List, Tuple
from classes import *

import winsound

# use 'plus' istead of '+'
# use 'comma' istead of ','
# use 'space' istead of ' '

WAKE_UP_HOTKEYS: list[str | NonSuppressedHotkey] = [
    'ctrl+shift+space',
    # If the program starts holding keys while sleeping, this is a bug! The workaround is to use NonSuppressedHotkey for the hotkeys that are causing the bug. When a hotkey that contains "alt" or "alt gr" is used for sleeping without NonSuppressedHotkey, the program can start to hold "alt" or "ctrl" when the user presses "alt gr" or "ctrl+alt gr". Because of this, we use NonSuppressedHotkey below:
    NonSuppressedHotkey('alt+f'),
    NonSuppressedHotkey('alt gr+j'),
]

MIRROR: List[Tuple[str, str]] = [
    ('tab', '´'),
    ('caps lock', '~'),
    ('a', 'ç'),
    ('s', 'l'),
    ('d', 'k'),
    ('f', 'j'),
    ('g', 'h'),
    ('q', 'p'),
    ('w', 'o'),
    ('e', 'i'),
    ('r', 'u'),
    ('t', 'y'),
    ('\\', ';'),
    ('z', '.'),
    ('x', 'comma'),
    ('c', 'm'),
    ('v', 'n'),
    ('\'', '-'),
    ('1', '0'),
    ('2', '9'),
    ('3', '8'),
    ('4', '7'),
    ('5', '6'),
]

DICTIONARIES: list[ChordDict] = [

    ChordDict(name='Typing', mirrorChords=True, entries=[

        Hold('tab', 'ctrl'),
        Hold('caps lock', 'shift'),
        Hold('\\', 'alt'),
        Hold('d+f+s', 'alt gr'),
        ToggleActiveChordDictWindow('a+d+f'),
        Sleep('a+g'),

        ActivateChordDict('t', 'Shortcuts'),

        # Use `tap_with_num_lock_disabled=True` to ensure that the key/hotkey will be pressed and released with 'num lock' disabled (the program will disable 'num lock', tap the key/hotkey, and then re-enable 'num lock'). This is useful for tapping the arrow keys when Shift is being held; otherwise, the program may not work as expected. (see https://github.com/boppreh/keyboard/issues/496).
        Tap('space+a+e', 'up', tap_with_num_lock_disabled=True),
        Tap('space+a+s', 'left', tap_with_num_lock_disabled=True),
        Tap('space+a+f', 'right', tap_with_num_lock_disabled=True),
        Tap('space+a+d', 'down', tap_with_num_lock_disabled=True),
        Tap('space+a+r', 'end', tap_with_num_lock_disabled=True),
        Tap('space+a+w', 'home', tap_with_num_lock_disabled=True),
        Tap('a+r+e', 'page up', tap_with_num_lock_disabled=True),
        Tap('a+r+d', 'page down', tap_with_num_lock_disabled=True),
        
        Tap('space', 'space'),
        Tap('q+v', 'delete'),
        Tap('space+a+d+f+s', 'enter'),
        Tap('f', 'e'),
        Tap('d', 't'),
        Tap('s', 's'),
        Tap('e', 'i'),
        Tap('q', 'backspace'),
        Tap('g', 'h'),
        Tap('v', 'n'),
        Tap('a', 'a'),
        Tap('w', 'o'),
        Tap('r', 'r'),
        Tap('c', 'c'),
        Tap('x', 'd'),
        Tap('z', 'l'),
        Tap('d+f', 'u'),
        Tap('d+s', 'm'),
        Tap('e+w', 'f'),
        Tap('e+r', 'g'),
        Tap('c+x', 'p'),
        Tap('f+s', 'y'),
        Tap('a+d', 'w'),
        Tap('a+f', 'b'),
        Tap('q+w', ','),
        Tap('e+f+w', '.'),
        Tap('r+w', 'v'),
        Tap('r+q', 'k'),
        Tap('x+v', '-'),
        Tap('space+f', 'shift+\'', '"'),
        Tap('space+g', 'shift+_', '_'), # 'shift+-' or '_' doesn't work, but 'shift+underscore' and 'shift+_' works.
        Tap('space+d+f', '\''),
        Tap('a+s', 'x'),
        Tap('space+e', 'shift+0', ')'),
        Tap('space+w', 'shift+9', '('),
        Write('e+r+w', ';'), # keyboard.press_and_release(';') used by Tap wrongly types '/'
        Tap('space+d', '0'),
        Tap('e+f', 'j'),
        Tap('space+r', '1'),
        Tap('e+q', 'q'),
        Tap('e+q+w', '='),
        Tap('space+s', '2'),
        Tap('space+d+s', 'shift+colon', ':'), # 'shift+;' or ':' doesn't work, but 'shift+colon' and 'shift+:' works.
        Tap('c+v', 'z'),
        Tap('x+z', 'num /', 'Numpad /'),
        Tap('v+z', 'num *', 'Numpad *'),
        Tap('a+v', 'shift+1', '!'),
        Tap('d+v', 'alt gr+w', '?'),
        Tap('a+g+s', 'shift+4', '$'),
        Tap('space+q', '3'),
        Tap('space+a', 'num 5'),
        Tap('d+g', 'shift+.', '>'),
        Tap('f+w', 'shift+[', '{'),
        Tap('g+w', 'shift+]', '}'),
        Tap('space+v', '4'),
        Tap('space+e+r', '9'),
        Tap('f+q', '['),
        Tap('g+q', ']'),
        Tap('space+r+w', '8'),
        Tap('space+e+q', '6'),
        Tap('space+f+s', '7'),
        Tap('space+x', '\\'),
        Tap('d+g+s', 'plus'),
        Tap('a+r', 'shift+\\', '|'),
        Tap('a+e', 'shift+7', '&'),
        Tap('a+w', 'shift+comma', '<'),
        Tap('a+c', 'shift+5', '%'),
        Tap('e+g', 'shift+2', '@'),
        Tap('a+d+s', 'shift+3', '#'),
        Tap('space+q+w', 'shift+~', '^'),
        Tap('g+s', 'shift+´', '`'),
        Tap('space+g+s', '´'),
        Tap('space+e+w', '~'),
        Tap('caps lock+a', 'tab'),
        Tap('caps lock+a+s', 'ç'),
        Tap('b', 'esc'),
        Tap('space+b', 'caps lock'),
    ]),

    ChordDict(name='Shortcuts', mirrorChords=True, entries=[
        # Tap('My Non-Existent Chord+t', 'My Non-Existent Key'),
        
        ActivateChordDict('t', 'Typing'),
        ToggleActiveChordDictWindow('a+d+f'),
        FunctionCall('n+m', lambda: winsound.Beep(440, 500)),
        Hold('e', 'alt'),
        Tap('r', 'tab'),
        # Tap('a+f', 'ctrl'),
        # Tap('a+f', 'shift'),
        # Tap('a+f', 'alt'),
        # Tap('a+f', 'alt gr'),

        Tap('space+r', 'F1'),
        Tap('space+s', 'F2'),
        Tap('space+q', 'F3'),
        Tap('space+v', 'F4'),
        Tap('space+a', 'F5'),
        Tap('space+e+q', 'F6'),
        Tap('space+f+s', 'F7'),
        Tap('space+r+w', 'F8'),
        Tap('space+e+r', 'F9'),
        Tap('space+d', 'F10'),
        Tap('space+f', 'F11'),
        Tap('space+d+f', 'F12'),

        # Tap('a+f', 'ctrl+c'),
        # Tap('a+f', 'ctrl+v'),
        # Tap('a+f', 'ctrl+x'),
        # Tap('a+f', 'ctrl+a'),
        # Tap('a+f', 'ctrl+s'),
        # Tap('a+f', 'ctrl+shift+s'),
        # Tap('n+k', 'ctrl+z'),
        # Tap('a+f', 'ctrl+shift+z'),
        # Tap('a+f', 'ctrl+y'),
        # Tap('n+k', 'ctrl+n'),
        # Tap('a+f', 'ctrl+shift+n'),
        # Tap('n+k', 'ctrl+o'),
        # Tap('a+f', 'ctrl+shift+o'),
        # Tap('n+k', 'ctrl+p'),
        # Tap('n+k', 'ctrl+b'),
        # Tap('a+f', 'ctrl+k, i'),
        # Tap('a+f', 'ctrl+k, s'),
        # Tap('a+f', 'f11'),
        # Tap('a+f', 'f12'),
        # Tap('a+f', 'f2'),
        # Tap('a+f', 'ctrl+f4'),
        # Tap('a+f', 'alt+f4'),
        # Tap('a+f', 'ctrl+w'),
        # Tap('a+f', 'ctrl+t'),
        # Tap('a+f', 'ctrl+shift+t'),
        # Tap('a+f', 'ctrl+d'),
        # Tap('a+f', 'ctrl+j'),
        # Tap('a+f', 'ctrl+shift+e'),
        # Tap('a+f', 'ctrl+shift+m'),
        # Tap('a+f', 'ctrl+\''),
        # Tap('a+f', 'alt+z'),
        # Tap('a+f', 'shift+alt+i'),
        # Tap('a+f', 'ctrl+f'),
        # Tap('a+f', 'ctrl+shift+f'),
        # Tap('a+f', 'ctrl+h'),
        # Tap('a+f', 'ctrl+/'),
        # Tap('a+f', 'ctrl+*'),
        # Tap('n+k', 'shift+down'),
        # Tap('n+k', 'shift+up'),
        # Tap('n+k', 'ctrl+down'),
        # Tap('n+k', 'ctrl+up'),
        # Tap('n+k', 'alt+down'),
        # Tap('n+k', 'alt+up'),
        # Tap('n+k', 'ctrl+alt+down'),
        # Tap('n+k', 'ctrl+alt+up'),
        # Tap('n+k', 'shift+alt+down'),
        # Tap('n+k', 'shift+alt+up'),
        # Tap('n+k', 'shift+alt+left'),
        # Tap('n+k', 'shift+alt+right'),
        # Tap('n+k', 'alt+comma'),
        # Tap('n+k', 'alt+.'),
        # Tap('n+k', 'alt+l, alt+o'),
        Quit('a+d'),
        Restart('a+x'),
    ]),

]